=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.22.2

=head1 DESCRIPTION

This document describes perl-only differences between the cperl 5.22.1
release and the cperl 5.22.2 release.

For B<cperl> see F<Changes> and L<perlcperl>

=head1 Core Enhancements

=over 4

=item *

Support for builtin and efficient signatures. See L<perlsub/Signatures> and
L<perlfunc/prototype>.
The C<prototype> function returns the parsed string of a declared
signature if no prototype attribute overrides it.

The C<@_> array inside a function body with a signature is empty. With
default parameters there's is currently no way to find out how many
actual arguments were provided, and how many were filled out with
defaults.

=item *

Better support for -DC and -DCv debugging, with new REFCNT statistics.
Added CowREFCNT_inc,dec and overflow assertions.

=item *

Creating *{"_<$filename"} Perl debugger data structures (see
L<perldebguts/"Debugger Internals">) for XSUBs and const subs has been
removed.  This removed one glob/scalar combo for each unique C<.c>
file that XSUBs and const subs came from.  On startup (C<perl -e"0">)
about half a dozen glob/scalar debugger combos were created.  Loading
XS modules created more glob/scalar combos.  These things were created
regardless if the perl debugger was being used or not, unlike for pure
perl subs, and ignores that the perl debugger can not debug C code.

=item *

Re-added the C<PL_sv_objcount> interpreter-global variable used to track the total
number of Perl objects in the interpreter, which was removed in Perl 5.20.
It is beneficial for all scripts which do not create objects in global scope,
so we dont have to check all remaining SV's to call a potential DESTROY method.

This broke binary back-compatibility on MULTIPLICITY and ITHREAD builds with
cperl-5.22.1.

=item *

Minor improvements in the lexer code (F<toke.c>). Added helper
functions, LEX_TYPE_*BRACKETS_ON|OFF macros, better DEBUGGING support.
regen_perly keeps now useful temp. files.

=item *

Support static lexical warnings. Honor op_static with COPs. This helps
producing better compiled perlcc code. (#70)

=item *

Support new ccflags -DPERL_SV_DEBUG_FIELDS for easier flags bitfields
debugging, even without -DDEBUGGING.

=item *

Add support for CowREFCNT assertions and statistics and with -Dv,
seperated from -DC.

=item *

Add support for additional F<pod/perlcdelta.pod> in F<Porting/pod_rules.pl>.

=back

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item Config 5.022002

Config is now a regular XS module, which could theoretically even be
uploaded to CPAN. This improves platform support and parallel build
fragility.
The Config tables are now also readonly.

=item threads 2.02_01

Protect C<ithread_free> from deleted C<PL_modglobal> during global destruction.

=item ExtUtils-Embed 1.34c

Optimize C<boot_DynaLoader>, fix a couple of stack errors.

=item Test::Harness

Fix 2 tests broken with readonly Config.

=item Time::HiRes 1.9727_02

To improve parallel builds on Windows.

=item XSLoader 1.01c

Support utf8-encoded XS modulenames.
Beware: untested and platform incompatible.

=item DynaLoader 2.01c

Fixed typo @shared_objects. It is named @dl_shared_objects.
This broke C<perlcc --staticxs> (#71)

=item B 1.58_02

Fix B::UNOP_AUX::aux_list design with threads.
No 2nd cv arg, return the PADOFFSET not the SV. (#76)

Export SVt_ types. (#80)

=item Safe 2.39_02c

Fixed Safe version 'c' problem. Do not check the XS_VERSION of
Opcode, because it has a cperl 'c' suffix, which is not yet fully
supported in the version check code.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item Win32

=over

=item *

A new build option C<USE_NO_REGISTRY> has been added to the makefiles.  This
option is off by default, meaning the default is to do Windows registry lookups.
This option stops Perl from looking inside the registry for anything.  For what
values are looked up in the registry see L<perlwin32>.  Internally, in C, the
name of this option is C<WIN32_NO_REGISTRY>.

=item *

The behavior of Perl using C<HKEY_CURRENT_USER\Software\Perl> and
C<HKEY_LOCAL_MACHINE\Software\Perl> to lookup certain values, including
C<%ENV> vars starting with C<PERL> has changed.  Previously, the 2 keys were
checked for entries at all times through Perl processes life time even if they
did not exist.  For performance reasons, now, if the root key (i.e.
C<HKEY_CURRENT_USER\Software\Perl> or C<HKEY_LOCAL_MACHINE\Software\Perl>) does
not exist at process start time, it will not be checked again for C<%ENV>
override entries for the remainder of the Perl processes life.  This more
closely matches Unix behaviour in that the enviroment is copied or inherited on
startup and changing the variable in the parent process or another process or
editing <.bashrc> will not change the enviromental variable in other existing,
running, processes.

=item *

Windows support was added. There is also new support for parallel builds.
The windows smokes are done via appveyor, on MSVC 10 and MSVC 12, on 32bit and 64bit,
in optimized Release mode only. No mingw/gcc builds yet.

=item *

One glob fetch was removed for each C<-X> or C<stat> call whether done from
Perl code or internally from Perl's C code. The glob being looked up was
C<${^WIN32_SLOPPY_STAT}> which is a special variable. This makes C<-X> and
C<stat> slightly faster.

=item *

During Miniperl's process startup, during the build process, 4 to 8 IO calls
related to the process starting C<.pl> and the C<buildcustomize.pl> file were
removed from the code opening and executing the first 1 or 2 C<.pl> files.

=back

=item Other

=over

=item *

Improved support for threaded builds.

=item *

Better DynaLoader support for os2, symbian, Netware.

=back

=back

=head1 Selected Bug Fixes

=over 4

=item * Fix fixes RT#776270 and CVE-2012-3878 module loading security weakness

Treat invalid names to require, such as ::foo as error.
New errors:

Bareword in require contains "%s", with "\0", "./" or "../" as invalid substrings.

Bareword in require maps to empty filename

Bareword in require maps to disallowed filename "%s", with absolute
filenames, filenames starting with "." or not ending with ".pm".

=item * uncow on utf8::encode [cperl #50]

=item * Fixed compilation with -DDEBUGGING and usethreads

In the new loop bounds check elimination code.

=item * Fixed ByteLoader [cperl #75]

Fixed breakage from perl5.22.0 in op.c:newPROG()

=back

=head1 Acknowledgements

[ Fill with Porting/acknowledgements.pl ]

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the C<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug please file an issue at
L<https://github.com/perl11/cperl/issues>

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
